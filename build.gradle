import dex.plugins.outlet.v2.util.ReleaseType

plugins {
	id 'fabric-loom' version '1.6-SNAPSHOT'
	id 'io.github.dexman545.outlet' version '1.6.1'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

group = project.maven_group
version = "${project.mod_version}+${project.minecraft_version}"

outlet {
	maintainPropertiesFile = System.getenv("DISABLE_PROPERTIES_UPDATE") == null
	mcVersionRange = project.supported_minecraft_versions
	allowedReleaseTypes = Set.of(ReleaseType.RELEASE)
	propertiesData = [
	        'yarn_version': outlet.yarnVersion(project.minecraft_version),
			'loader_version': outlet.loaderVersion()
	]
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.'
	maven {
		name = "JitPack"
		url = "https://jitpack.io"
		content {
			includeGroup "com.github.LlamaLad7"
		}
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_version}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	include "com.github.LlamaLad7:MixinExtras:${project.mixinextras_version}"
	implementation "com.github.LlamaLad7:MixinExtras:${project.mixinextras_version}"
	annotationProcessor "com.github.LlamaLad7:MixinExtras:${project.mixinextras_version}"
}

processResources {
	inputs.property "id", project.mod_id
	inputs.property "version", project.mod_version
	inputs.property "name", project.mod_name
	inputs.property "pascalName", pascalCase(project.mod_name)
	inputs.property "description", project.mod_description
	inputs.property "sources", project.mod_sources
	inputs.property "license", project.mod_license
	inputs.property "group", project.maven_group
	inputs.property "modrinthProject", project.modrinth_project

	filesMatching("fabric.mod.json") {
		expand(
				id: project.mod_id,
				version: project.mod_version,
				name: project.mod_name,
				pascalName: pascalCase(project.mod_name),
				description: project.mod_description,
				sources: project.mod_sources,
				license: project.mod_license,
				group: project.maven_group,
				modrinthProject: project.modrinth_project
		)
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

static def pascalCase(String text) {
	String[] words = text.split("[\\W_]+")
	StringBuilder builder = new StringBuilder()

	for (String word : words) builder.append(word.isEmpty() ? word : Character.toUpperCase(word.charAt(0)).toString() + word.substring(1).toLowerCase())

	return builder.toString()
}
